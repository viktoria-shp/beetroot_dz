@charset "UTF-8";
@import url("https://fonts.googleapis.com/css2?family=Playfair+Display&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Lato:wght@300&display=swap");
* {
	margin: 0;
	padding: 0;
	-webkit-box-sizing: border-box;
	        box-sizing: border-box;
}

html,
body {
	min-height: 100vh;
}

body {
	font-size: 100%;
	color: #7a7a7a;
}

li {
	list-style: none;
}

.container {
	display: -webkit-box;
	display: -webkit-flex;
	display: -ms-flexbox;
	display:         flex;
	-webkit-box-pack: center;
	-webkit-justify-content: center;
	-ms-flex-pack: center;
	        justify-content: center;
	padding: 150px 100px 120px;
}
.container .article {
	max-width: 1400px;
	-webkit-box-shadow: 0 0 2em 1em #f4f4f4;
	        box-shadow: 0 0 2em 1em #f4f4f4;
	padding: 140px 120px 120px;
}
.container .article__title {
	font-family: "Playfair Display", serif;
	font-size: 42px;
	color: #171717;
	margin-bottom: 40px;
}
.container .article__text {
	font-family: "Lato", sans-serif;
	font-size: 18px;
	color: #7a7a7a;
	margin-bottom: 42px;
}
.container .article__text p {
	margin-bottom: 40px;
}
.container .article__text p:last-of-type {
	margin-bottom: 20px;
}
.container .article__text .subhead::first-letter {
	float: left;
	margin: -15px 20px 6px 0;
	font: 4.1em/1 "Playfair Display", serif;
	color: #171717;
}
.container .article__text blockquote:before {
	content: "â€œ";
	content: open-quote;
	font-size: 60px;
	line-height: .7;
	padding: 0 25px 0 10px;
}
.container .article__text blockquote p {
	display: inline;
	font-size: 24px;
}
.container .article__button button {
	border: 1px solid #eaa258;
	background-color: #fff;
	padding: 18px 50px;
	font-size: 24px;
	color: #eaa258;
	font-weight: 500;
	letter-spacing: 5px;
	cursor: pointer;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLmNzcyIsIl92YXJzLnNjc3MiLCJfY29tbW9uLnNjc3MiLCJfYXJ0aWNsZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQjtBQ0FoQixxRkFBWTtBQUNaLGtGQUFZO0FDRFo7RUFDRSxTQUFTO0VBQ1QsVUFBVTtFQUNWLDhCQUFzQjtFQUF0QixzQkFBc0IsRUFBQTs7QUFFeEI7RUFDSSxpQkFBaUIsRUFBQTs7QUFFckI7RUFDSSxlQUFlO0VBQ2YsY0ROZ0IsRUFBQTs7QUNRcEI7RUFDRSxnQkFBZ0IsRUFBQTs7QUNibEI7RUFDRSxvQkFBYTtFQUFiLHFCQUFhO0VBQWIsb0JBQWE7RUFBYixhQUFhO0VBQ2Isd0JBQXVCO0VBQXZCLCtCQUF1QjtFQUF2QixxQkFBdUI7RUFBdkIsdUJBQXVCO0VBQ3ZCLDBCQUEwQixFQUFBO0VBSDVCO0lBS0ksaUJBQWlCO0lBQ2pCLHVDQUErQjtJQUEvQiwrQkFBK0I7SUFDL0IsMEJBQTBCLEVBQUE7SUFQOUI7TUFTTSxzQ0ZLK0I7TUVKL0IsZUZEVztNRUVYLGNGUmU7TUVTZixtQkFBbUIsRUFBQTtJQVp6QjtNQWVNLCtCRkF3QjtNRUN4QixlRk5VO01FT1YsY0ZiYztNRWNkLG1CQUFtQixFQUFBO01BbEJ6QjtRQW9CUSxtQkFBbUIsRUFBQTtNQXBCM0I7UUF1QlEsbUJBQW1CLEVBQUE7TUF2QjNCO1FBMEJRLFdBQVc7UUFDWCx3QkFBd0I7UUFDeEIsdUNGZDZCO1FFZTdCLGNGMUJhLEVBQUE7TUVIckI7UUFnQ1EsWUFBUztRQUNULG1CQUFtQjtRQUNuQixlQUFlO1FBQ2YsZ0JBQWdCO1FBQ2hCLHNCQUFzQixFQUFBO01BcEM5QjtRQXVDUSxlQUFlO1FBQ2YsZUY3QmMsRUFBQTtJRVh0QjtNQTZDWSx5QkZ4Q1U7TUV5Q1Ysc0JGeENBO01FeUNBLGtCQUFrQjtNQUNsQixlRnJDVTtNRXNDVixjRjVDVTtNRTZDVixnQkFBZ0I7TUFDaEIsbUJBQW1CO01BQ25CLGVBQWUsRUFBQSIsImZpbGUiOiJzdHlsZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAY2hhcnNldCBcIlVURi04XCI7XG5AaW1wb3J0IHVybChcImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9UGxheWZhaXIrRGlzcGxheSZkaXNwbGF5PXN3YXBcIik7XG5AaW1wb3J0IHVybChcImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9TGF0bzp3Z2h0QDMwMCZkaXNwbGF5PXN3YXBcIik7XG4qIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbmh0bWwsIGJvZHkge1xuICBtaW4taGVpZ2h0OiAxMDB2aDsgfVxuXG5ib2R5IHtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBjb2xvcjogIzdhN2E3YTsgfVxuXG5saSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7IH1cblxuLmNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBwYWRkaW5nOiAxNTBweCAxMDBweCAxMjBweDsgfVxuICAuY29udGFpbmVyIC5hcnRpY2xlIHtcbiAgICBtYXgtd2lkdGg6IDE0MDBweDtcbiAgICBib3gtc2hhZG93OiAwIDAgMmVtIDFlbSAjZjRmNGY0O1xuICAgIHBhZGRpbmc6IDE0MHB4IDEyMHB4IDEyMHB4OyB9XG4gICAgLmNvbnRhaW5lciAuYXJ0aWNsZV9fdGl0bGUge1xuICAgICAgZm9udC1mYW1pbHk6IFwiUGxheWZhaXIgRGlzcGxheVwiLCBzZXJpZjtcbiAgICAgIGZvbnQtc2l6ZTogNDJweDtcbiAgICAgIGNvbG9yOiAjMTcxNzE3O1xuICAgICAgbWFyZ2luLWJvdHRvbTogNDBweDsgfVxuICAgIC5jb250YWluZXIgLmFydGljbGVfX3RleHQge1xuICAgICAgZm9udC1mYW1pbHk6IFwiTGF0b1wiLCBzYW5zLXNlcmlmO1xuICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgY29sb3I6ICM3YTdhN2E7XG4gICAgICBtYXJnaW4tYm90dG9tOiA0MnB4OyB9XG4gICAgICAuY29udGFpbmVyIC5hcnRpY2xlX190ZXh0IHAge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiA0MHB4OyB9XG4gICAgICAuY29udGFpbmVyIC5hcnRpY2xlX190ZXh0IHA6bGFzdC1vZi10eXBlIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDsgfVxuICAgICAgLmNvbnRhaW5lciAuYXJ0aWNsZV9fdGV4dCAuc3ViaGVhZDo6Zmlyc3QtbGV0dGVyIHtcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgIG1hcmdpbjogLTE1cHggMjBweCA2cHggMDtcbiAgICAgICAgZm9udDogNC4xZW0vMSBcIlBsYXlmYWlyIERpc3BsYXlcIiwgc2VyaWY7XG4gICAgICAgIGNvbG9yOiAjMTcxNzE3OyB9XG4gICAgICAuY29udGFpbmVyIC5hcnRpY2xlX190ZXh0IGJsb2NrcXVvdGU6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCLigJxcIjtcbiAgICAgICAgY29udGVudDogb3Blbi1xdW90ZTtcbiAgICAgICAgZm9udC1zaXplOiA2MHB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMC43O1xuICAgICAgICBwYWRkaW5nOiAwIDI1cHggMCAxMHB4OyB9XG4gICAgICAuY29udGFpbmVyIC5hcnRpY2xlX190ZXh0IGJsb2NrcXVvdGUgcCB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICAgICAgZm9udC1zaXplOiAyNHB4OyB9XG4gICAgLmNvbnRhaW5lciAuYXJ0aWNsZV9fYnV0dG9uIGJ1dHRvbiB7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjZWFhMjU4O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgIHBhZGRpbmc6IDE4cHggNTBweDtcbiAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgIGNvbG9yOiAjZWFhMjU4O1xuICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgIGxldHRlci1zcGFjaW5nOiA1cHg7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7IH1cbiIsIkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PVBsYXlmYWlyK0Rpc3BsYXkmZGlzcGxheT1zd2FwJyk7XHJcbkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PUxhdG86d2dodEAzMDAmZGlzcGxheT1zd2FwJyk7XHJcblxyXG4kdGl0bGUtY29sb3I6ICMxNzE3MTc7XHJcbiR0ZXh0LWNvbG9yOiAjN2E3YTdhO1xyXG4kYnV0dG9uLWNvbG9yOiAjZWFhMjU4O1xyXG4kd2hpdGU6ICNmZmY7XHJcbiRibGFjazogIzAwMDtcclxuXHJcbiR0aXRsZS1zaXplOiA0MnB4O1xyXG4kdGV4dC1zaXplOiAxOHB4O1xyXG4kYmxvY2txdW90ZS1zaXplIDoyNHB4O1xyXG5cclxuXHJcbiRtYWluLWZvbnQ6ICdQbGF5ZmFpciBEaXNwbGF5Jywgc2VyaWY7XHJcbiR0ZXh0LWZvbnQ6ICdMYXRvJywgc2Fucy1zZXJpZjtcclxuXHJcbiIsIioge1xyXG4gIG1hcmdpbjogMDtcclxuICBwYWRkaW5nOiAwO1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuaHRtbCwgYm9keSB7XHJcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcclxufVxyXG5ib2R5IHtcclxuICAgIGZvbnQtc2l6ZTogMTAwJTtcclxuICAgIGNvbG9yOiAkdGV4dC1jb2xvcjtcclxufVxyXG5saSB7XHJcbiAgbGlzdC1zdHlsZTogbm9uZTtcclxufSIsIi5jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgcGFkZGluZzogMTUwcHggMTAwcHggMTIwcHg7XHJcbiAgLmFydGljbGUge1xyXG4gICAgbWF4LXdpZHRoOiAxNDAwcHg7XHJcbiAgICBib3gtc2hhZG93OiAwIDAgMmVtIDFlbSAjZjRmNGY0O1xyXG4gICAgcGFkZGluZzogMTQwcHggMTIwcHggMTIwcHg7XHJcbiAgICAmX190aXRsZSB7XHJcbiAgICAgIGZvbnQtZmFtaWx5OiAkbWFpbi1mb250O1xyXG4gICAgICBmb250LXNpemU6ICR0aXRsZS1zaXplO1xyXG4gICAgICBjb2xvcjogJHRpdGxlLWNvbG9yO1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiA0MHB4O1xyXG4gICAgfVxyXG4gICAgJl9fdGV4dCB7XHJcbiAgICAgIGZvbnQtZmFtaWx5OiAkdGV4dC1mb250O1xyXG4gICAgICBmb250LXNpemU6ICR0ZXh0LXNpemU7XHJcbiAgICAgIGNvbG9yOiAkdGV4dC1jb2xvcjtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogNDJweDtcclxuICAgICAgcCB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNDBweDtcclxuICAgICAgfVxyXG4gICAgICBwOmxhc3Qtb2YtdHlwZSB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgICAgfVxyXG4gICAgICAuc3ViaGVhZDo6Zmlyc3QtbGV0dGVyIHtcclxuICAgICAgICBmbG9hdDogbGVmdDtcclxuICAgICAgICBtYXJnaW46IC0xNXB4IDIwcHggNnB4IDA7XHJcbiAgICAgICAgZm9udDogNC4xZW0vMSAkbWFpbi1mb250O1xyXG4gICAgICAgIGNvbG9yOiAkdGl0bGUtY29sb3I7XHJcbiAgICAgIH1cclxuICAgICAgYmxvY2txdW90ZTpiZWZvcmUge1xyXG4gICAgICAgIGNvbnRlbnQ6IFwi4oCcXCI7XHJcbiAgICAgICAgY29udGVudDogb3Blbi1xdW90ZTtcclxuICAgICAgICBmb250LXNpemU6IDYwcHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDAuNztcclxuICAgICAgICBwYWRkaW5nOiAwIDI1cHggMCAxMHB4O1xyXG4gICAgICB9XHJcbiAgICAgIGJsb2NrcXVvdGUgcCB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogJGJsb2NrcXVvdGUtc2l6ZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJl9fYnV0dG9uIHtcclxuICAgICAgICBidXR0b24ge1xyXG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAkYnV0dG9uLWNvbG9yO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDE4cHggNTBweDtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAkYmxvY2txdW90ZS1zaXplO1xyXG4gICAgICAgICAgICBjb2xvcjogJGJ1dHRvbi1jb2xvcjtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgICAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDVweDtcclxuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19 */
