(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

//task_1

/*let name = prompt("What is your name?");
alert('Hello' + ' ' + name);*/
//task_2

/*const year = 2020;
let age = prompt("What year of birth?");
alert('You are' + ' ' + (year - age));*/
//task_3

/*let length = prompt("Enter side length of a square?");
alert('perimetr of a square =' + ' ' + 4*length);*/
//task_4

/*let radius = prompt("Enter the radius of the circle?");
const pi = 3.1415;
alert('radius of the circle =' + ' ' + pi*Math.pow(radius, 2));*/
//task_5

/*let s = prompt("Enter the distance"),
    t = prompt("Enter time");
alert('your speed should be ' + ' ' + (s/t));*/
//task_6

/*let s = prompt("Enter the amount in dollars");
const calk = 0.86;
alert('Euro ' + ' ' + (s*calk));*/
//task_7

/*let s = prompt("Enter flash drive volume in gigabytes");
const calk = 1024;
alert('you can hold'+' ' + Math.floor((s*calk)/860) + ' ' + 'files of 860 megabytes');*/
//task_8

/*let suma = prompt("Enter the amount"),
    price= prompt("Enter the price of chocolate");
alert('you can buy' +' ' + Math.floor(suma/price) + ' ' + ' chocolates. Your rest is =' +' ' + suma%price);*/
//task_9
var n1 = prompt("Enter a three-digit number"),
    n2 = 0,
    digit;

while (n1 > 0) {
  digit = n1 % 10;
  n1 = n1;
  n2 = n2 * 10;
  n2 = n2 + digit;
  alert('Reverse number', n2);
} //task_10

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJwcm9qZWN0cy9qcy9zcmMvanMvYXBwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUNBQTs7QUFDQTs7QUFHQTs7QUFDQTs7O0FBSUE7O0FBQ0E7O0FBR0E7O0FBQ0E7OztBQUlBOztBQUNBOzs7QUFJQTs7QUFDQTs7O0FBSUE7O0FBQ0E7OztBQUlBOztBQUNBOzs7QUFJQTtBQUNBLElBQUksRUFBRSxHQUFHLE1BQU0sQ0FBQyw0QkFBRCxDQUFmO0FBQUEsSUFDQSxFQUFFLEdBQUcsQ0FETDtBQUFBLElBQ1EsS0FEUjs7QUFFQSxPQUFNLEVBQUUsR0FBRyxDQUFYLEVBQ0E7QUFDSSxFQUFBLEtBQUssR0FBRyxFQUFFLEdBQUcsRUFBYjtBQUNBLEVBQUEsRUFBRSxHQUFHLEVBQUw7QUFDQSxFQUFBLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBVjtBQUNBLEVBQUEsRUFBRSxHQUFHLEVBQUUsR0FBRyxLQUFWO0FBQ0osRUFBQSxLQUFLLENBQUMsZ0JBQUQsRUFBbUIsRUFBbkIsQ0FBTDtBQUNDLEMsQ0FFRCIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwiLy90YXNrXzFcclxuLypsZXQgbmFtZSA9IHByb21wdChcIldoYXQgaXMgeW91ciBuYW1lP1wiKTtcclxuYWxlcnQoJ0hlbGxvJyArICcgJyArIG5hbWUpOyovXHJcblxyXG4vL3Rhc2tfMlxyXG4vKmNvbnN0IHllYXIgPSAyMDIwO1xyXG5sZXQgYWdlID0gcHJvbXB0KFwiV2hhdCB5ZWFyIG9mIGJpcnRoP1wiKTtcclxuYWxlcnQoJ1lvdSBhcmUnICsgJyAnICsgKHllYXIgLSBhZ2UpKTsqL1xyXG5cclxuLy90YXNrXzNcclxuLypsZXQgbGVuZ3RoID0gcHJvbXB0KFwiRW50ZXIgc2lkZSBsZW5ndGggb2YgYSBzcXVhcmU/XCIpO1xyXG5hbGVydCgncGVyaW1ldHIgb2YgYSBzcXVhcmUgPScgKyAnICcgKyA0Kmxlbmd0aCk7Ki9cclxuXHJcbi8vdGFza180XHJcbi8qbGV0IHJhZGl1cyA9IHByb21wdChcIkVudGVyIHRoZSByYWRpdXMgb2YgdGhlIGNpcmNsZT9cIik7XHJcbmNvbnN0IHBpID0gMy4xNDE1O1xyXG5hbGVydCgncmFkaXVzIG9mIHRoZSBjaXJjbGUgPScgKyAnICcgKyBwaSpNYXRoLnBvdyhyYWRpdXMsIDIpKTsqL1xyXG5cclxuLy90YXNrXzVcclxuLypsZXQgcyA9IHByb21wdChcIkVudGVyIHRoZSBkaXN0YW5jZVwiKSxcclxuICAgIHQgPSBwcm9tcHQoXCJFbnRlciB0aW1lXCIpO1xyXG5hbGVydCgneW91ciBzcGVlZCBzaG91bGQgYmUgJyArICcgJyArIChzL3QpKTsqL1xyXG5cclxuLy90YXNrXzZcclxuLypsZXQgcyA9IHByb21wdChcIkVudGVyIHRoZSBhbW91bnQgaW4gZG9sbGFyc1wiKTtcclxuY29uc3QgY2FsayA9IDAuODY7XHJcbmFsZXJ0KCdFdXJvICcgKyAnICcgKyAocypjYWxrKSk7Ki9cclxuXHJcbi8vdGFza183XHJcbi8qbGV0IHMgPSBwcm9tcHQoXCJFbnRlciBmbGFzaCBkcml2ZSB2b2x1bWUgaW4gZ2lnYWJ5dGVzXCIpO1xyXG5jb25zdCBjYWxrID0gMTAyNDtcclxuYWxlcnQoJ3lvdSBjYW4gaG9sZCcrJyAnICsgTWF0aC5mbG9vcigocypjYWxrKS84NjApICsgJyAnICsgJ2ZpbGVzIG9mIDg2MCBtZWdhYnl0ZXMnKTsqL1xyXG5cclxuLy90YXNrXzhcclxuLypsZXQgc3VtYSA9IHByb21wdChcIkVudGVyIHRoZSBhbW91bnRcIiksXHJcbiAgICBwcmljZT0gcHJvbXB0KFwiRW50ZXIgdGhlIHByaWNlIG9mIGNob2NvbGF0ZVwiKTtcclxuYWxlcnQoJ3lvdSBjYW4gYnV5JyArJyAnICsgTWF0aC5mbG9vcihzdW1hL3ByaWNlKSArICcgJyArICcgY2hvY29sYXRlcy4gWW91ciByZXN0IGlzID0nICsnICcgKyBzdW1hJXByaWNlKTsqL1xyXG5cclxuLy90YXNrXzlcclxubGV0IG4xID0gcHJvbXB0KFwiRW50ZXIgYSB0aHJlZS1kaWdpdCBudW1iZXJcIiksXHJcbm4yID0gMCwgZGlnaXQ7XHJcbndoaWxlKG4xID4gMClcclxue1xyXG4gICAgZGlnaXQgPSBuMSAlIDEwO1xyXG4gICAgbjEgPSBuMTtcclxuICAgIG4yID0gbjIgKiAxMDtcclxuICAgIG4yID0gbjIgKyBkaWdpdDtcclxuYWxlcnQoJ1JldmVyc2UgbnVtYmVyJywgbjIpO1xyXG59XHJcblxyXG4vL3Rhc2tfMTBcclxuIl0sInByZUV4aXN0aW5nQ29tbWVudCI6Ii8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltNXZaR1ZmYlc5a2RXeGxjeTlpY205M2MyVnlMWEJoWTJzdlgzQnlaV3gxWkdVdWFuTWlMQ0p3Y205cVpXTjBjeTlxY3k5emNtTXZhbk12WVhCd0xtcHpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCT3pzN1FVTkJRVHM3UVVGRFFUczdRVUZIUVRzN1FVRkRRVHM3TzBGQlNVRTdPMEZCUTBFN08wRkJSMEU3TzBGQlEwRTdPenRCUVVsQk96dEJRVU5CT3pzN1FVRkpRVHM3UVVGRFFUczdPMEZCU1VFN08wRkJRMEU3T3p0QlFVbEJPenRCUVVOQk96czdRVUZKUVR0QlFVTkJMRWxCUVVrc1JVRkJSU3hIUVVGSExFMUJRVTBzUTBGQlF5dzBRa0ZCUkN4RFFVRm1PMEZCUVVFc1NVRkRRU3hGUVVGRkxFZEJRVWNzUTBGRVREdEJRVUZCTEVsQlExRXNTMEZFVWpzN1FVRkZRU3hQUVVGTkxFVkJRVVVzUjBGQlJ5eERRVUZZTEVWQlEwRTdRVUZEU1N4RlFVRkJMRXRCUVVzc1IwRkJSeXhGUVVGRkxFZEJRVWNzUlVGQllqdEJRVU5CTEVWQlFVRXNSVUZCUlN4SFFVRkhMRVZCUVV3N1FVRkRRU3hGUVVGQkxFVkJRVVVzUjBGQlJ5eEZRVUZGTEVkQlFVY3NSVUZCVmp0QlFVTkJMRVZCUVVFc1JVRkJSU3hIUVVGSExFVkJRVVVzUjBGQlJ5eExRVUZXTzBGQlEwb3NSVUZCUVN4TFFVRkxMRU5CUVVNc1owSkJRVVFzUlVGQmJVSXNSVUZCYmtJc1EwRkJURHRCUVVORExFTXNRMEZGUkNJc0ltWnBiR1VpT2lKblpXNWxjbUYwWldRdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lLR1oxYm1OMGFXOXVLQ2w3Wm5WdVkzUnBiMjRnY2lobExHNHNkQ2w3Wm5WdVkzUnBiMjRnYnlocExHWXBlMmxtS0NGdVcybGRLWHRwWmlnaFpWdHBYU2w3ZG1GeUlHTTlYQ0ptZFc1amRHbHZibHdpUFQxMGVYQmxiMllnY21WeGRXbHlaU1ltY21WeGRXbHlaVHRwWmlnaFppWW1ZeWx5WlhSMWNtNGdZeWhwTENFd0tUdHBaaWgxS1hKbGRIVnliaUIxS0drc0lUQXBPM1poY2lCaFBXNWxkeUJGY25KdmNpaGNJa05oYm01dmRDQm1hVzVrSUcxdlpIVnNaU0FuWENJcmFTdGNJaWRjSWlrN2RHaHliM2NnWVM1amIyUmxQVndpVFU5RVZVeEZYMDVQVkY5R1QxVk9SRndpTEdGOWRtRnlJSEE5Ymx0cFhUMTdaWGh3YjNKMGN6cDdmWDA3WlZ0cFhWc3dYUzVqWVd4c0tIQXVaWGh3YjNKMGN5eG1kVzVqZEdsdmJpaHlLWHQyWVhJZ2JqMWxXMmxkV3pGZFczSmRPM0psZEhWeWJpQnZLRzU4ZkhJcGZTeHdMSEF1Wlhod2IzSjBjeXh5TEdVc2JpeDBLWDF5WlhSMWNtNGdibHRwWFM1bGVIQnZjblJ6ZldadmNpaDJZWElnZFQxY0ltWjFibU4wYVc5dVhDSTlQWFI1Y0dWdlppQnlaWEYxYVhKbEppWnlaWEYxYVhKbExHazlNRHRwUEhRdWJHVnVaM1JvTzJrckt5bHZLSFJiYVYwcE8zSmxkSFZ5YmlCdmZYSmxkSFZ5YmlCeWZTa29LU0lzSWk4dmRHRnphMTh4WEhKY2JpOHFiR1YwSUc1aGJXVWdQU0J3Y205dGNIUW9YQ0pYYUdGMElHbHpJSGx2ZFhJZ2JtRnRaVDljSWlrN1hISmNibUZzWlhKMEtDZElaV3hzYnljZ0t5QW5JQ2NnS3lCdVlXMWxLVHNxTDF4eVhHNWNjbHh1THk5MFlYTnJYekpjY2x4dUx5cGpiMjV6ZENCNVpXRnlJRDBnTWpBeU1EdGNjbHh1YkdWMElHRm5aU0E5SUhCeWIyMXdkQ2hjSWxkb1lYUWdlV1ZoY2lCdlppQmlhWEowYUQ5Y0lpazdYSEpjYm1Gc1pYSjBLQ2RaYjNVZ1lYSmxKeUFySUNjZ0p5QXJJQ2g1WldGeUlDMGdZV2RsS1NrN0tpOWNjbHh1WEhKY2JpOHZkR0Z6YTE4elhISmNiaThxYkdWMElHeGxibWQwYUNBOUlIQnliMjF3ZENoY0lrVnVkR1Z5SUhOcFpHVWdiR1Z1WjNSb0lHOW1JR0VnYzNGMVlYSmxQMXdpS1R0Y2NseHVZV3hsY25Rb0ozQmxjbWx0WlhSeUlHOW1JR0VnYzNGMVlYSmxJRDBuSUNzZ0p5QW5JQ3NnTkNwc1pXNW5kR2dwT3lvdlhISmNibHh5WEc0dkwzUmhjMnRmTkZ4eVhHNHZLbXhsZENCeVlXUnBkWE1nUFNCd2NtOXRjSFFvWENKRmJuUmxjaUIwYUdVZ2NtRmthWFZ6SUc5bUlIUm9aU0JqYVhKamJHVS9YQ0lwTzF4eVhHNWpiMjV6ZENCd2FTQTlJRE11TVRReE5UdGNjbHh1WVd4bGNuUW9KM0poWkdsMWN5QnZaaUIwYUdVZ1kybHlZMnhsSUQwbklDc2dKeUFuSUNzZ2NHa3FUV0YwYUM1d2IzY29jbUZrYVhWekxDQXlLU2s3S2k5Y2NseHVYSEpjYmk4dmRHRnphMTgxWEhKY2JpOHFiR1YwSUhNZ1BTQndjbTl0Y0hRb1hDSkZiblJsY2lCMGFHVWdaR2x6ZEdGdVkyVmNJaWtzWEhKY2JpQWdJQ0IwSUQwZ2NISnZiWEIwS0Z3aVJXNTBaWElnZEdsdFpWd2lLVHRjY2x4dVlXeGxjblFvSjNsdmRYSWdjM0JsWldRZ2MyaHZkV3hrSUdKbElDY2dLeUFuSUNjZ0t5QW9jeTkwS1NrN0tpOWNjbHh1WEhKY2JpOHZkR0Z6YTE4MlhISmNiaThxYkdWMElITWdQU0J3Y205dGNIUW9YQ0pGYm5SbGNpQjBhR1VnWVcxdmRXNTBJR2x1SUdSdmJHeGhjbk5jSWlrN1hISmNibU52Ym5OMElHTmhiR3NnUFNBd0xqZzJPMXh5WEc1aGJHVnlkQ2duUlhWeWJ5QW5JQ3NnSnlBbklDc2dLSE1xWTJGc2F5a3BPeW92WEhKY2JseHlYRzR2TDNSaGMydGZOMXh5WEc0dktteGxkQ0J6SUQwZ2NISnZiWEIwS0Z3aVJXNTBaWElnWm14aGMyZ2daSEpwZG1VZ2RtOXNkVzFsSUdsdUlHZHBaMkZpZVhSbGMxd2lLVHRjY2x4dVkyOXVjM1FnWTJGc2F5QTlJREV3TWpRN1hISmNibUZzWlhKMEtDZDViM1VnWTJGdUlHaHZiR1FuS3ljZ0p5QXJJRTFoZEdndVpteHZiM0lvS0hNcVkyRnNheWt2T0RZd0tTQXJJQ2NnSnlBcklDZG1hV3hsY3lCdlppQTROakFnYldWbllXSjVkR1Z6SnlrN0tpOWNjbHh1WEhKY2JpOHZkR0Z6YTE4NFhISmNiaThxYkdWMElITjFiV0VnUFNCd2NtOXRjSFFvWENKRmJuUmxjaUIwYUdVZ1lXMXZkVzUwWENJcExGeHlYRzRnSUNBZ2NISnBZMlU5SUhCeWIyMXdkQ2hjSWtWdWRHVnlJSFJvWlNCd2NtbGpaU0J2WmlCamFHOWpiMnhoZEdWY0lpazdYSEpjYm1Gc1pYSjBLQ2Q1YjNVZ1kyRnVJR0oxZVNjZ0t5Y2dKeUFySUUxaGRHZ3VabXh2YjNJb2MzVnRZUzl3Y21salpTa2dLeUFuSUNjZ0t5QW5JR05vYjJOdmJHRjBaWE11SUZsdmRYSWdjbVZ6ZENCcGN5QTlKeUFySnlBbklDc2djM1Z0WVNWd2NtbGpaU2s3S2k5Y2NseHVYSEpjYmk4dmRHRnphMTg1WEhKY2JteGxkQ0J1TVNBOUlIQnliMjF3ZENoY0lrVnVkR1Z5SUdFZ2RHaHlaV1V0WkdsbmFYUWdiblZ0WW1WeVhDSXBMRnh5WEc1dU1pQTlJREFzSUdScFoybDBPMXh5WEc1M2FHbHNaU2h1TVNBK0lEQXBYSEpjYm50Y2NseHVJQ0FnSUdScFoybDBJRDBnYmpFZ0pTQXhNRHRjY2x4dUlDQWdJRzR4SUQwZ2JqRTdYSEpjYmlBZ0lDQnVNaUE5SUc0eUlDb2dNVEE3WEhKY2JpQWdJQ0J1TWlBOUlHNHlJQ3NnWkdsbmFYUTdYSEpjYm1Gc1pYSjBLQ2RTWlhabGNuTmxJRzUxYldKbGNpY3NJRzR5S1R0Y2NseHVmVnh5WEc1Y2NseHVMeTkwWVhOclh6RXdYSEpjYmlKZGZRPT0ifQ==
